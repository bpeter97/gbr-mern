{
  "stats": {
    "suites": 8,
    "tests": 21,
    "passes": 1,
    "pending": 20,
    "failures": 0,
    "start": "2018-06-05T04:36:13.998Z",
    "end": "2018-06-05T04:36:17.388Z",
    "duration": 3390,
    "testsRegistered": 21,
    "passPercent": 100,
    "pendingPercent": 95.2,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "success"
  },
  "suites": {
    "uuid": "7c98da1b-c125-4a11-80b4-87e1ba7db9b2",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "0d30e9dd-09ad-4e5e-affe-aa15c3bde8a5",
        "title": "QUOTES",
        "fullFile": "E:\\ProgrammingProjects\\gbr-mern-master\\server\\tests\\quotes.test.js",
        "file": "\\server\\tests\\quotes.test.js",
        "beforeHooks": [
          {
            "title": "\"before each\" hook: populateUsers",
            "fullTitle": "QUOTES \"before each\" hook: populateUsers",
            "timedOut": false,
            "duration": 1348,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "done => {\n  User.remove({})\n    .then(() => {\n      // generate the hash/salted password for the users.\n      var userOne = new User(users[0]).save().then(user => {\n        users[0].token = user.generateAuthToken();\n      });\n      var userTwo = new User(users[1]).save().then(user => {\n        users[1].token = user.generateAuthToken();\n      });\n      var userThree = new User(users[2]).save();\n      return Promise.all([userOne, userTwo, userThree]);\n    })\n    .then(() => done())\n    .catch(e => console.log(e));",
            "err": {},
            "isRoot": false,
            "uuid": "ec942d3e-b021-4972-87b6-be3264f79a54",
            "isHook": true,
            "skipped": false
          },
          {
            "title": "\"before each\" hook: populateProducts",
            "fullTitle": "QUOTES \"before each\" hook: populateProducts",
            "timedOut": false,
            "duration": 506,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "done => {\n  Product.remove({})\n    .then(() => {\n      var lockbox = new Product(products[0]).save();\n      var delivery = new Product(products[1]).save();\n      var container = new Product(products[2]).save();\n      return Promise.all([lockbox, delivery, container]);\n    })\n    .then(() => done())\n    .catch(e => console.log(e));",
            "err": {},
            "isRoot": false,
            "uuid": "a1c4e5ec-6424-48bf-ae87-737fee63aded",
            "isHook": true,
            "skipped": false
          },
          {
            "title": "\"before each\" hook: populatePurchaseTypes",
            "fullTitle": "QUOTES \"before each\" hook: populatePurchaseTypes",
            "timedOut": false,
            "duration": 171,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "done => {\n  PurchaseType.remove({})\n    .then(() => {\n      var purchaseTypeOne = new PurchaseType(purchaseTypes[0]).save();\n      var purchaseTypeTwo = new PurchaseType(purchaseTypes[1]).save();\n      return Promise.all([purchaseTypeOne, purchaseTypeTwo]);\n    })\n    .then(() => done())\n    .catch(e => console.log(e));",
            "err": {},
            "isRoot": false,
            "uuid": "f68fa16e-6fa3-457d-85a4-3fae7f0af427",
            "isHook": true,
            "skipped": false
          },
          {
            "title": "\"before each\" hook: populateCustomers",
            "fullTitle": "QUOTES \"before each\" hook: populateCustomers",
            "timedOut": false,
            "duration": 172,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "done => {\n  Customer.remove({})\n    .then(() => {\n      var customerOne = new Customer(customers[0]).save();\n      var customerTwo = new Customer(customers[1]).save();\n      var customerThree = new Customer(customers[2]).save();\n      return Promise.all([customerOne, customerTwo, customerThree]);\n    })\n    .then(() => done())\n    .catch(e => console.log(e));",
            "err": {},
            "isRoot": false,
            "uuid": "355a38e7-2da9-4da1-a839-98780b822475",
            "isHook": true,
            "skipped": false
          },
          {
            "title": "\"before each\" hook: populateRequestedProducts",
            "fullTitle": "QUOTES \"before each\" hook: populateRequestedProducts",
            "timedOut": false,
            "duration": 180,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "done => {\n  RequestedProduct.remove({})\n    .then(() => {\n      var requestedProductOne = new RequestedProduct(\n        requestedProducts[0]\n      ).save();\n      var requestedProductTwo = new RequestedProduct(\n        requestedProducts[1]\n      ).save();\n      return Promise.all([requestedProductOne, requestedProductTwo]);\n    })\n    .then(() => done())\n    .catch(e => console.log(e));",
            "err": {},
            "isRoot": false,
            "uuid": "f47780df-5b10-4258-9723-3fcf94af64ee",
            "isHook": true,
            "skipped": false
          },
          {
            "title": "\"before each\" hook: populatePurchasePrices",
            "fullTitle": "QUOTES \"before each\" hook: populatePurchasePrices",
            "timedOut": false,
            "duration": 163,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "done => {\n  PurchasePrices.remove({})\n    .then(() => {\n      var ppOne = new PurchasePrices(purchasePrices[0]).save();\n      return Promise.all([ppOne]);\n    })\n    .then(() => done())\n    .catch(e => console.log(e));",
            "err": {},
            "isRoot": false,
            "uuid": "060c7ced-9f54-4053-8036-413b0610737e",
            "isHook": true,
            "skipped": false
          },
          {
            "title": "\"before each\" hook: populateQuotes",
            "fullTitle": "QUOTES \"before each\" hook: populateQuotes",
            "timedOut": false,
            "duration": 166,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "done => {\n  Quote.remove({})\n    .then(() => {\n      var quoteOne = new Quote(quotes[0]).save();\n      return Promise.all([quoteOne]);\n    })\n    .then(() => done())\n    .catch(e => console.log(e));",
            "err": {},
            "isRoot": false,
            "uuid": "d9ab5aad-890e-4df3-b98f-8a007142174e",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "16404b07-82cd-4137-8f61-8746fe1a4d70",
            "title": "GET /quotes",
            "fullFile": "E:\\ProgrammingProjects\\gbr-mern-master\\server\\tests\\quotes.test.js",
            "file": "\\server\\tests\\quotes.test.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return all quotes that are not hidden",
                "fullTitle": "QUOTES GET /quotes should return all quotes that are not hidden",
                "timedOut": false,
                "duration": 635,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "done => {\n      request(app)\n        .get(\"/api/quotes\")\n        .set(\"Authorization\", users[0].token)\n        .expect(200)\n        .expect(res => {\n          expect(res.body[0].customer.name).toBe(customers[0].name);\n        })\n        .end(done);",
                "err": {},
                "isRoot": false,
                "uuid": "d28d8b5c-10e9-47f6-9c00-b0b417c23edb",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should not return quotes if not logged in",
                "fullTitle": "QUOTES GET /quotes should not return quotes if not logged in",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": true,
                "code": "",
                "err": {},
                "isRoot": false,
                "uuid": "16509a65-7d6d-42bd-b5de-7d101c39b56d",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "d28d8b5c-10e9-47f6-9c00-b0b417c23edb"
            ],
            "failures": [],
            "pending": [
              "16509a65-7d6d-42bd-b5de-7d101c39b56d"
            ],
            "skipped": [],
            "duration": null,
            "root": false,
            "rootEmpty": false,
            "_timeout": 5000
          },
          {
            "uuid": "85ba548e-1cc6-4af7-976b-26cb7434f4d6",
            "title": "POST /quotes",
            "fullFile": "E:\\ProgrammingProjects\\gbr-mern-master\\server\\tests\\quotes.test.js",
            "file": "\\server\\tests\\quotes.test.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should create a quote and return it",
                "fullTitle": "QUOTES POST /quotes should create a quote and return it",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": true,
                "code": "",
                "err": {},
                "isRoot": false,
                "uuid": "3bf1eb63-7d8a-4862-bf58-59c87c9dd587",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should not create a quote if not logged in",
                "fullTitle": "QUOTES POST /quotes should not create a quote if not logged in",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": true,
                "code": "",
                "err": {},
                "isRoot": false,
                "uuid": "2b4b2f4f-3286-469b-bb93-08d0a4599f06",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should not create a quote with validation errors",
                "fullTitle": "QUOTES POST /quotes should not create a quote with validation errors",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": true,
                "code": "",
                "err": {},
                "isRoot": false,
                "uuid": "8f3da79d-0623-42a6-985b-c3bc7f0ee97c",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [],
            "failures": [],
            "pending": [
              "3bf1eb63-7d8a-4862-bf58-59c87c9dd587",
              "2b4b2f4f-3286-469b-bb93-08d0a4599f06",
              "8f3da79d-0623-42a6-985b-c3bc7f0ee97c"
            ],
            "skipped": [],
            "duration": null,
            "root": false,
            "rootEmpty": false,
            "_timeout": 5000
          },
          {
            "uuid": "c5a8958e-ac1b-42c3-bf7e-6dec852913c5",
            "title": "GET /quotes/customer/:id",
            "fullFile": "E:\\ProgrammingProjects\\gbr-mern-master\\server\\tests\\quotes.test.js",
            "file": "\\server\\tests\\quotes.test.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return all of a customer's quotes that are not hidden",
                "fullTitle": "QUOTES GET /quotes/customer/:id should return all of a customer's quotes that are not hidden",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": true,
                "code": "",
                "err": {},
                "isRoot": false,
                "uuid": "824f80ea-b8b0-4833-a2b3-d7f886690704",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should not return quotes if not logged in",
                "fullTitle": "QUOTES GET /quotes/customer/:id should not return quotes if not logged in",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": true,
                "code": "",
                "err": {},
                "isRoot": false,
                "uuid": "c73350d2-a5d5-4c70-83dc-4aae0809dc66",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should not return quotes with invalid ID",
                "fullTitle": "QUOTES GET /quotes/customer/:id should not return quotes with invalid ID",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": true,
                "code": "",
                "err": {},
                "isRoot": false,
                "uuid": "d973388f-1c0c-49ba-b285-d817c5468a3e",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [],
            "failures": [],
            "pending": [
              "824f80ea-b8b0-4833-a2b3-d7f886690704",
              "c73350d2-a5d5-4c70-83dc-4aae0809dc66",
              "d973388f-1c0c-49ba-b285-d817c5468a3e"
            ],
            "skipped": [],
            "duration": null,
            "root": false,
            "rootEmpty": false,
            "_timeout": 5000
          },
          {
            "uuid": "f8599119-6ab6-4a23-a734-0eca34343ac4",
            "title": "GET /quotes/user/:id",
            "fullFile": "E:\\ProgrammingProjects\\gbr-mern-master\\server\\tests\\quotes.test.js",
            "file": "\\server\\tests\\quotes.test.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return all of a user's created quotes that are not hidden",
                "fullTitle": "QUOTES GET /quotes/user/:id should return all of a user's created quotes that are not hidden",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": true,
                "code": "",
                "err": {},
                "isRoot": false,
                "uuid": "4f8ec9b8-cd7d-47a5-8384-5a7941408000",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should not return quotes if not logged in",
                "fullTitle": "QUOTES GET /quotes/user/:id should not return quotes if not logged in",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": true,
                "code": "",
                "err": {},
                "isRoot": false,
                "uuid": "6ee98e82-52fc-4526-9cd8-661e3aa0ae50",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should not return quotes with invalid user ID",
                "fullTitle": "QUOTES GET /quotes/user/:id should not return quotes with invalid user ID",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": true,
                "code": "",
                "err": {},
                "isRoot": false,
                "uuid": "c9dbffbc-bda9-4e62-8ff1-c529ce33fd33",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [],
            "failures": [],
            "pending": [
              "4f8ec9b8-cd7d-47a5-8384-5a7941408000",
              "6ee98e82-52fc-4526-9cd8-661e3aa0ae50",
              "c9dbffbc-bda9-4e62-8ff1-c529ce33fd33"
            ],
            "skipped": [],
            "duration": null,
            "root": false,
            "rootEmpty": false,
            "_timeout": 5000
          },
          {
            "uuid": "3896336a-483d-4dfa-a285-1702c7704d22",
            "title": "GET /quotes/:id",
            "fullFile": "E:\\ProgrammingProjects\\gbr-mern-master\\server\\tests\\quotes.test.js",
            "file": "\\server\\tests\\quotes.test.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return a quote",
                "fullTitle": "QUOTES GET /quotes/:id should return a quote",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": true,
                "code": "",
                "err": {},
                "isRoot": false,
                "uuid": "a1beecde-e387-48f3-9387-13711c589b1e",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should not return quote if not logged in",
                "fullTitle": "QUOTES GET /quotes/:id should not return quote if not logged in",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": true,
                "code": "",
                "err": {},
                "isRoot": false,
                "uuid": "3a3b34c9-4f58-45df-af21-0a2d16cfb42c",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should not return quote with invalid ID",
                "fullTitle": "QUOTES GET /quotes/:id should not return quote with invalid ID",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": true,
                "code": "",
                "err": {},
                "isRoot": false,
                "uuid": "66f6ac47-3f07-436f-a19d-9de55b484302",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [],
            "failures": [],
            "pending": [
              "a1beecde-e387-48f3-9387-13711c589b1e",
              "3a3b34c9-4f58-45df-af21-0a2d16cfb42c",
              "66f6ac47-3f07-436f-a19d-9de55b484302"
            ],
            "skipped": [],
            "duration": null,
            "root": false,
            "rootEmpty": false,
            "_timeout": 5000
          },
          {
            "uuid": "f0783273-253f-4a32-9e3f-f83bd7206ad9",
            "title": "PATCH /quotes/:id",
            "fullFile": "E:\\ProgrammingProjects\\gbr-mern-master\\server\\tests\\quotes.test.js",
            "file": "\\server\\tests\\quotes.test.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should update a quote",
                "fullTitle": "QUOTES PATCH /quotes/:id should update a quote",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": true,
                "code": "",
                "err": {},
                "isRoot": false,
                "uuid": "011752d1-3caa-439a-8490-debc4130d3f5",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should not update quote with validation errors",
                "fullTitle": "QUOTES PATCH /quotes/:id should not update quote with validation errors",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": true,
                "code": "",
                "err": {},
                "isRoot": false,
                "uuid": "2675f94b-598b-4815-af7a-f290e442f16e",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should not update quote if not logged in",
                "fullTitle": "QUOTES PATCH /quotes/:id should not update quote if not logged in",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": true,
                "code": "",
                "err": {},
                "isRoot": false,
                "uuid": "29ff903c-4ed8-4207-9d17-1841c88caa3b",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should not update quote with invalid ID",
                "fullTitle": "QUOTES PATCH /quotes/:id should not update quote with invalid ID",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": true,
                "code": "",
                "err": {},
                "isRoot": false,
                "uuid": "cbd473eb-0c0a-41ee-818d-13f8af023898",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [],
            "failures": [],
            "pending": [
              "011752d1-3caa-439a-8490-debc4130d3f5",
              "2675f94b-598b-4815-af7a-f290e442f16e",
              "29ff903c-4ed8-4207-9d17-1841c88caa3b",
              "cbd473eb-0c0a-41ee-818d-13f8af023898"
            ],
            "skipped": [],
            "duration": null,
            "root": false,
            "rootEmpty": false,
            "_timeout": 5000
          },
          {
            "uuid": "6e6eab23-c5d2-487b-92d6-b3b5e578807f",
            "title": "DELETE /quotes/:id",
            "fullFile": "E:\\ProgrammingProjects\\gbr-mern-master\\server\\tests\\quotes.test.js",
            "file": "\\server\\tests\\quotes.test.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should delete a quote",
                "fullTitle": "QUOTES DELETE /quotes/:id should delete a quote",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": true,
                "code": "",
                "err": {},
                "isRoot": false,
                "uuid": "1c7058a9-b9fe-464b-b659-687ee21be24f",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should not delete quote if not logged in",
                "fullTitle": "QUOTES DELETE /quotes/:id should not delete quote if not logged in",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": true,
                "code": "",
                "err": {},
                "isRoot": false,
                "uuid": "bf49932d-b454-4e3d-a906-857a30541410",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should not delete quote with invalid ID",
                "fullTitle": "QUOTES DELETE /quotes/:id should not delete quote with invalid ID",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": true,
                "code": "",
                "err": {},
                "isRoot": false,
                "uuid": "209f7d6b-5e3f-41f4-8201-44883e02d6ee",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [],
            "failures": [],
            "pending": [
              "1c7058a9-b9fe-464b-b659-687ee21be24f",
              "bf49932d-b454-4e3d-a906-857a30541410",
              "209f7d6b-5e3f-41f4-8201-44883e02d6ee"
            ],
            "skipped": [],
            "duration": null,
            "root": false,
            "rootEmpty": false,
            "_timeout": 5000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 5000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 5000
  },
  "copyrightYear": 2018
}